/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useCylinder } from "@react-three/cannon";
import { useGLTF } from "@react-three/drei";

export function Lamppost(props: any) {
  const position = [props?.position?.[0], props?.position?.[1] + 3.375, props?.position?.[2]]
  const { nodes, materials }: { nodes: any, materials: any } = useGLTF("/threeDModels/lamppost.glb");
  const [ref] = useCylinder(() => ({ args: [0.6,0.3,6.3], mass: 1000, ...props, position }));

  return (
    <group ref={ref} {...props} dispose={null}>
      <group position={[0,0.2,0]}>
        <pointLight 
            intensity={1000}
            decay={1.8}
            position={[0,2.7,0]}
            color="#f8fff1"
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder_1.geometry}
          material={materials["Material.001"]}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cylinder_2.geometry}
          material={materials["Material.002"]}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/threeDModels/lamppost.glb");