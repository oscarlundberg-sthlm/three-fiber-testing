/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { rotate } from "@/helpers/threeJs";
import { useBox } from "@react-three/cannon";
import { PerspectiveCamera, useGLTF } from "@react-three/drei";
import { forwardRef, useMemo } from "react";
import { SpotLight } from "three";

useGLTF.preload("threeDModels/pickup/carbody.glb");

interface TruckBodyProps {
  args: any;
  mass?: number;
  setVisible?: any;
}

const TruckBody = forwardRef(
  (
    { args = [1.7, 0.4, 4], mass = 500, setVisible, ...props }: any,
    ref
  ) => {
    const { nodes, materials }: { nodes: any, materials: any } = useGLTF("threeDModels/pickup/carbody.glb");

    const [, api] = useBox(
      () => ({
        mass,
        args,
        allowSleep: false,
        ...props,
      }),
      ref as any
    );

    const spotlightFront = useMemo(() => new SpotLight('#f8fff1'), []);
    const spotlightBack = useMemo(() => new SpotLight('#ff2025'), []);

    return (
      <mesh
        ref={ref as any}
        /* @ts-ignore */
        api={api}
        userData={{ id: "truckbody" }}
        {...props}
      >
            <mesh>
                <group>
                  <mesh position={[0,0.1,2]}>
                    <primitive
                      object={spotlightFront}
                      intensity={500}
                      decay={1}
                      penumbra={0.2}
                      position={[0, 0.022, 0.239]}
                    />
                  </mesh>
                  <primitive object={spotlightFront.target} position={[0,0,10]} />
                </group>
                <group>
                  <mesh position={[0,0,-1.6]}>
                      <primitive
                          object={spotlightBack}
                          intensity={50}
                          decay={1}
                          penumbra={0.2}
                          position={[0, 0.026, 0.043]}
                          rotation={[-Math.PI / 2, -Math.PI / 2, 0]}
                      />
                  </mesh>
                  <primitive object={spotlightBack.target} position={[0,0,-10]} />
                </group>
                  <pointLight 
                    color="#ff2025"
                    intensity={1}
                    decay={2}
                    position={[-1,-0.65,-3]}
                  />
                  <pointLight 
                    color="#ff2025"
                    intensity={1}
                    decay={2}
                    position={[1,-0.65,-3]}
                  />
                <mesh>
                    <group dispose={null}>
                        <mesh rotation={[0,rotate(-180), 0]}>
                            <PerspectiveCamera
                                makeDefault
                                near={0.1}
                                far={1000}
                                fov={80}
                                position={[0, 2, 8]}
                                rotation={[rotate(5), 0, 0]}
                            />
                        </mesh>
                        <mesh
                            castShadow
                            receiveShadow
                            geometry={nodes.Cylinder011.geometry}
                            material={materials["body color"]}
                        />
                        <mesh
                            castShadow
                            receiveShadow
                            geometry={nodes.Cylinder011_1.geometry}
                            material={materials.windows}
                        />
                    </group>
                </mesh>
            </mesh>
      </mesh>
    );
  }
);

TruckBody.displayName = 'TruckBody';
export default TruckBody;
